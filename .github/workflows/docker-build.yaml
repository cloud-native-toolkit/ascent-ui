name: Docker build

# Controls when the workflow will run
on:
  release:
    types:
      - published
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to CNTK Quay
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_CNTK_USERNAME }}
          password: ${{ secrets.QUAY_CNTK_TOKEN }}

      - name: Setup variables
        id: variables
        shell: bash
        run: |
          LATEST_ENABLED="true"
          
          RELEASE_TAG=${GITHUB_REF#refs/tags/}
          RELEASE_TAG_ENABLED="false"
          if [[ "${GITHUB_REF}" =~ refs/tags ]] && [[ "${RELEASE_TAG}" != "main" ]]; then
            RELEASE_TAG_ENABLED="true"
          else
            RELEASE_TAG="main"
          fi
          
          echo "Release tag: ${RELEASE_TAG}"
          echo "release-tag=$RELEASE_TAG" >> $GITHUB_OUTPUT
          
          echo "Release tag enabled: $RELEASE_TAG_ENABLED"
          echo "release-tag-enabled=$RELEASE_TAG_ENABLED" >> $GITHUB_OUTPUT
          
          echo "Latest enabled: $LATEST_ENABLED"
          echo "latest-enabled=$LATEST_ENABLED" >> $GITHUB_OUTPUT

      - name: Docker CNTK meta
        id: cntk-meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{vars.IMAGE_BASE}}
          # Docker tags based on the following events/attributes
          tags: |
            type=raw,value=${{ steps.variables.outputs.release-tag }},enable=${{ steps.variables.outputs.release-tag-enabled }}
            type=raw,value=latest

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.cntk-meta.outputs.tags }}
          labels: ${{ steps.cntk-meta.outputs.labels }}

  notify:
    needs: ["build"]
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}

    strategy:
      matrix:
        repo:
          - ${{ github.repository }}

    steps:
      - name: Repository dispatch ${{ matrix.repo }}
        uses: cloud-native-toolkit/action-repository-dispatch@main
        with:
          notifyRepo: ${{ matrix.repo }}
          eventType: released
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
